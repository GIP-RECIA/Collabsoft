# For more information see: https://docs.github.com/en/actions/

name: Badges CI

on:
  push:
    branches: ['main']
    paths: ['**.java', '.github/workflows/build.yml', 'pom.xml']
  pull_request:
    branches: ['main']
  workflow_dispatch:

env:
  LANG: 'fr_FR.UTF-8'
  LC_ALL: 'fr_FR.UTF-8'
  LANGUAGE: 'fr_FR.UTF-8'
  LC_CTYPE: 'fr_FR.UTF-8'
  TZ: 'Europe/Paris'
  MARIADB_IMG: 'wodby/mariadb'
  JAVA: '11'
  MARIADB: '10.3'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout badges branch to a badges directory nested inside first checkout
        uses: actions/checkout@v4
        with:
          ref: badges
          path: badges

      - name: Set timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: 'Europe/Paris'
      - name: Set up locale ENV
        run: |
          sudo locale-gen $LANG
          sudo update-locale LANG=$LANG
          sudo apt install net-tools
      - name: Check locales
        run: locale -a

      # Setup mariadb
      - name: Pull ${{ env.MARIADB_IMG }}:${{ env.MARIADB }} image
        run: docker pull ${{ env.MARIADB_IMG }}:${{ env.MARIADB }}
      - name: Run MariaDB container
        run: |
          docker run -t -d --name mariadb --rm -v \
            --health-cmd="mysqladmin -uroot -proot ping" --health-interval=10s --health-timeout=10s --health-retries=10 \
            -p 3306:3306/tcp \
            -e "TZ=Europe/Paris" \
            -e "MYSQL_USER=root" \
            -e "MYSQL_ROOT_PASSWORD=root" \
            -e "MYSQL_DATABASE=collabsoft" \
            -e "MYSQL_DEFAULT_STORAGE_ENGINE=InnoDB" \
            -e "MYSQL_CHARACTER_SET_SERVER=utf8mb4" \
            -e "MYSQL_COLLATION_SERVER=utf8mb4_unicode_520_ci" \
            -e "MYSQL_INNODB_BUFFER_POOL_SIZE=2G" \
            -e "MYSQL_INNODB_DEFAULT_ROW_FORMAT=dynamic" \
            -e "MYSQL_INNODB_DATA_FILE_PATH=ibdata1:100M:autoextend:max:10G" \
            -e "MYSQL_INNODB_FLUSH_LOG_AT_TRX_COMMIT=1" \
            -e "MYSQL_INNODB_LOG_BUFFER_SIZE=64M" \
            -e "MYSQL_INNODB_LOG_FILE_SIZE=256M" \
            -e "MYSQL_INNODB_STRICT_MODE=ON" \
            -e "MYSQL_LOWER_CASE_TABLE_NAMES=1" \
            -e "MYSQL_MAX_CONNECT_ERRORS=100" \
            -e "MYSQL_MAX_CONNECTIONS=1000" \
            -e "MYSQL_QUERY_CACHE_LIMIT=10M" \
            -e "MYSQL_QUERY_CACHE_SIZE=0" \
            -e "MYSQL_QUERY_CACHE_TYPE=OFF" \
            ${{ env.MARIADB_IMG }}:${{ env.MARIADB }} &
          sleep 30
      - name: Test MariaDB
        run: docker exec mariadb /bin/bash -c "mysql -h127.0.0.1 -uroot -proot -e \"show variables like '%time_zone'; select now();\""
      - name: Check date
        run: |
          date
          mysql -h127.0.0.1 -uroot -proot -e "show variables like '%time_zone'; select now();"
      - name: DB connection test and conf checks
        run: |
          netstat -pnltu
          mysql -h127.0.0.1 -uroot -proot -e "show databases;"
          mysql -h127.0.0.1 -uroot -proot -e "show variables like 'char%'; show variables like 'collation%';show variables like 'innodb_default_row_format';"
          mysql -h127.0.0.1 -uroot -proot -e "use collabsoft;show tables;"
      - name: Populate database
        run: mysql -h127.0.0.1 -uroot -proot < ./src/test/resources/collabsoft.sql

      # Setup Java
      - name: Set up JDK ${{ env.JAVA }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA }}
          distribution: 'temurin'
          cache: maven

      - name: Build backend
        run: ./mvnw -B clean package -Pprod -Dmaven.test.skip=true -Darguments="-DskipTests"

      - name: Tests backend
        run: ./mvnw test -Ptest

      - name: Generate JaCoCo badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          generate-summary: true

      - name: Log coverage percentages to workflow output
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"

      - name: Upload JaCoCo coverage report as a workflow artifact
        uses: actions/upload-artifact@v3
        with:
          name: jacoco-report
          path: target/site/jacoco/

      - name: Commit and push the coverage badges and summary file
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd badges
          if [[ `git status --porcelain *.svg *.json` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg *.json
            git commit -m "Autogenerated JaCoCo coverage badges" *.svg *.json
            git push
          fi

      - name: Comment on PR with coverage percentages
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          REPORT=$(<badges/coverage-summary.json)
          COVERAGE=$(jq -r '.coverage' <<< "$REPORT")%
          BRANCHES=$(jq -r '.branches' <<< "$REPORT")%
          NEWLINE=$'\n'
          BODY="## JaCoCo Test Coverage Summary Statistics${NEWLINE}* __Coverage:__ ${COVERAGE}${NEWLINE}* __Branches:__ ${BRANCHES}"
          gh pr comment ${{github.event.pull_request.number}} -b "${BODY}"
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
